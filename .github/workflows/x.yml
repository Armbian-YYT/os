name: "Build All Artifacts (cronjob)"

on:
  workflow_dispatch:

env:
  
  BUILD_REPOSITORY: "armbian/build"
  USERPATCHES_REPOSITORY: "armbian/os"
  USERPATCHES_REF: "main" # branch or tag or sha1
  USERPATCHES_DIR: "userpatches" # folder inside USERPATCHES_REPOSITORY
  GH_TOKEN: "${{ secrets.RELEASE_TOKEN }}"

jobs:

  version_prep:
    name: "Create release notes"
    runs-on: [ "ubuntu-latest" ]
    steps:

      # Clone the userpatches repo (`armbian/os`)
      - name: "Checkout userpatches repo: ${{env.USERPATCHES_REPOSITORY}}#${{env.USERPATCHES_REF}}"
        uses: actions/checkout@v4
        if: ${{ ( env.USERPATCHES_REPOSITORY != '' ) && ( env.USERPATCHES_REF != '' ) }}
        with:
          repository: ${{ env.USERPATCHES_REPOSITORY }}
          ref: ${{ env.USERPATCHES_REF }}
          fetch-depth: 0
          clean: false # true is default.

      - name: "Generate body file"
        if: ${{ (github.event.inputs.skipImages || 'yes') != 'yes' }}
        run: |
            echo "
              <p align='center'>
              <a href='https://www.armbian.com'>
              <img src='https://raw.githubusercontent.com/armbian/.github/master/profile/tux-two.png' width='400'></a></p>
              <h1 align=center>Rolling releases</h1>
              <p align=center>
              <a href='https://www.armbian.com'><img alt='Armbian Linux stable' src='https://img.shields.io/badge/dynamic/json?label=Armbian%20Linux%20current&query=CURRENT&color=f71000&cacheSeconds=600&style=for-the-badge&url=https%3A%2F%2Fgithub.com%2Farmbian%2Fscripts%2Freleases%2Fdownload%2Fstatus%2Frunners_capacity.json'></a>
              <a href='https://www.armbian.com'><img alt='Armbian Linux rolling' src='https://img.shields.io/badge/dynamic/json?label=Armbian%20Linux%20edge&query=EDGE&color=34be5b&cacheSeconds=600&style=for-the-badge&url=https%3A%2F%2Fgithub.com%2Farmbian%2Fscripts%2Freleases%2Fdownload%2Fstatus%2Frunners_capacity.json'></a>
              </p>
              <br>

              - rolling releases are available at the bottom of <a href='https://www.armbian.com/download/' target=_blanks>official download pages</a>
              - if you want to change automated builds variants, edit <a href='https://github.com/armbian/os/tree/main/userpatches'>.yaml files</a>
              - for old builds with unknown support status check <a href='https://archive.armbian.com' target=_blank>archives</a>

              <br>
              &nbsp;
              </p>" > body.html

      - name: Read version from file if nor overriden
        if: ${{ ! github.event.inputs.versionOverride }}
        run: |
          mkdir -p downloads
          #cat "${{ steps.versionfile.outputs.file }}.json" | jq '.version' | sed "s/\"//g" | sed 's/^/VERSION_OVERRIDE=/' >> $GITHUB_ENV
          #cat "${{ steps.versionfile.outputs.file }}.json" | jq '.version' | sed "s/\"//g" > downloads/version

          cat "nightly.json" | jq '.version' | sed "s/\"//g" | sed 's/^/VERSION_OVERRIDE=/' >> $GITHUB_ENV
          cat "nightly.json" | jq '.version' | sed "s/\"//g" > downloads/version
          
      - uses: ncipollo/release-action@v1
        #if: ${{ (github.event.inputs.nightlybuild || 'yes') == 'yes' && (github.event.inputs.skipImages || 'yes') != 'yes' }}
        with:
          owner: 'armbian'
          repo: 'build'
          tag: "${{ env.VERSION_OVERRIDE }}"
          name: "${{ env.VERSION_OVERRIDE }}"
          generateReleaseNotes: "true"
          prerelease: "true"
          bodyFile: "body.html"
          allowUpdates: "false"
          skipIfReleaseExists: "true"
          token: ${{ secrets.RELEASE_TOKEN }}        
