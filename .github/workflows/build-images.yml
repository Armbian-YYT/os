name: Build Images
#

on:
#  push:
  schedule:
    - cron: "30 3 * * *"
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: 'Release'
        options:
        - nightly
        - stable
      board:
        description: 'Board'
        required: false
        default: ''
      version:
        description: 'Version'
        required: false
        default: ''


jobs:

  Prepare:
  
    name: "Preparing GH Actions" # In case we have a currently active build, cancel it
    
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: ubuntu-latest
    steps:

      - name: "Cancel active workflow"
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Keep only 32 nightly releases"
        uses: Vucko130/delete-older-releases@v0.2.2
        with:
          keep_latest: 32
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Purge action workflow logs"
        uses: igorjs/gh-actions-clean-workflow@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          days_old: 10

  kernel:
    name: "Update kernel cache"
    needs: Prepare

    if: ${{ github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-kernel-cache.yml@main
    with:
      ACCESS_NAME: igorpecovnik
      BUILD_BRANCH: ${{ inputs.BUILD_BRANCH }}
      BUILD_RUNNER: ${{ inputs.BUILD_RUNNER }}
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  generaterelease:

    needs: kernel
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: ubuntu-latest
    
    name: "Generate ${{ inputs.release }} release"
    outputs:
      version: ${{steps.releases.outputs.version}}
    steps:

      - name: "Get latest release version"
        id: releases
        run: |

          echo "VERSION=$(curl -s https://raw.githubusercontent.com/armbian/build/main/VERSION)"\
          -"$(git ls-remote -h https://github.com/armbian/build main | cut -c1-9)" >> $GITHUB_ENV
          
          [[ -n "${{ inputs.version }}" ]] && echo "version=${{ inputs.version }}" >> $GITHUB_ENV || true

          echo "version=1234" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: ncipollo/release-action@v1      
        if: ${{ github.repository_owner == 'Armbian' && github.event.inputs.release != 'stable' }}
        with:
          artifacts: "LICENSE"
          tag: "${{ env.VERSION }}"
          name: "Armbian ${{ env.VERSION }}"
          bodyFile: ".github/Releases.md"
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

  Legacy_cli:

    needs: generaterelease
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      branch: 'legacy'
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      variant: 'minimal'
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
