#
# This action recreate action for building stable images
#
name: Recreate Matrix (push)
on:
  push:
    branches:
      - 'main'
    paths:
      - "userpatches/**"
      - "userpatches/gha/**"
      - "userpatches/gha/chunks/**"
      - ".github/workflows/recreate-matrix.yml"

  workflow_dispatch:
  repository_dispatch:
    types: [Recreate Matrix]

concurrency:
  group: matrix-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    name: Recreate action
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: linux
    steps:

    - name: Checkout Armbian Framework
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        repository: armbian/build
        ref:  main
        fetch-depth: 0
        clean: false
        path: build

    - name: Checkout Armbian OS Config
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        repository: armbian/os
        ref:  main
        clean: false
        fetch-depth: 0
        path: os

    - name: "Rsync userpatches"
      run: |

        rsync -av os/userpatches/. build/userpatches/
        rm -f build/userpatches/targets.yaml

    - name: "Generate Lists"
      run: |

        # generate lists to include them
        ls -1 build/config/boards/*.{conf,eos,wip,csc} | cut -d"/" -f4 | cut -d"." -f1 | uniq | sed 's/.*/        - &/' > /tmp/boards.txt
        grep BOARD_MAINTAINER build/config/boards/*.{conf,eos,wip,csc} | cut -d":" -f2 | cut -d"=" -f2 | sed 's/"/ /g' | tr -d '\n' | tr -s ' ' | xargs -n1 | sort | uniq | sed 's/.*/        - &/' > /tmp/maintainers.txt
        git ls-remote --heads https://github.com/armbian/build | grep "v2" | cut -d"/" -f3 | sort | tail -1 | sed '1s/^/main\n/' | sed 's/.*/        - &/' > /tmp/branches.txt

        BOARDS=$(ls -1 build/config/boards/*.{csc,tvb})
        rm -f /tmp/unsupported* /tmp/supported* /tmp/wip*
        for board in $BOARDS; do
        TARGET="/tmp/unsupported-slow-hdmi.txt"
        BOARDFAMILY=$(grep BOARDFAMILY $board | cut -d '"' -f 2)
        echo $BOARDFAMILY
        if [[ $board == *.conf* ]]; then SUPPORT=supported;
        elif [[ $board == *.wip* ]]; then SUPPORT=wip;
        else SUPPORT=unsupported; fi
        source build/config/sources/families/${BOARDFAMILY}.conf 2>/dev/null || true
        TARGET="/tmp/${SUPPORT}-slow-hdmi.txt"
        if [[ $ARCH == riscv64 ]]; then TARGET="/tmp/${SUPPORT}-riscv64.txt";
        elif grep -q HAS_VIDEO_OUTPUT $board; then TARGET="/tmp/${SUPPORT}-headless.txt";
        elif [[ $ARCH == arm64 || $ARCH == amd64 ]]; then TARGET="/tmp/${SUPPORT}-fast-hdmi.txt"
        fi
        KERNEL_TARGET=$(grep KERNEL_TARGET $board | cut -d '"' -f 2)
        board=$(echo $board | cut -d"/" -f4 | cut -d"." -f1)
        if [[ "${KERNEL_TARGET}" == *current* ]]; then echo "    - { BOARD: $board, BRANCH: current }" >> $TARGET ;
        elif [[ "${KERNEL_TARGET}" == *edge* ]]; then echo "    - { BOARD: $board, BRANCH: edge }" >> $TARGET ;
        elif [[ "${KERNEL_TARGET}" == *legacy* ]]; then echo "    - { BOARD: $board, BRANCH: legacy}" >> $TARGET;
        fi
        done

        # generate targets-release-community-maintained.yaml
        #cp os/userpatches/targets-release-standard-support.template os/userpatches/targets-release-standard-support.yaml
        #cp os/userpatches/targets-release-community-maintained.template os/userpatches/targets-release-community-maintained.yaml
        #cp os/userpatches/targets-release-nightly.template os/userpatches/targets-release-nightly.yaml

        sed '/    # supported-slow-hdmi/r /tmp/supported-slow-hdmi.txt'     os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # supported-fast-hdmi/r /tmp/supported-fast-hdmi.txt'     os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # supported-riscv64/r /tmp/supported-riscv64.txt'         os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # supported-headless/r /tmp/supported-headless.txt'       os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # wip-slow-hdmi/r /tmp/wip-slow-hdmi.txt'                 os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # wip-fast-hdmi/r /tmp/wip-slow-hdmi.txt'                 os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # wip-riscv64-hdmi/r /tmp/wip-slow-hdmi.txt'              os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml
        sed '/    # wip-headless/r /tmp/wip-headless.txt'                   os/userpatches/targets-release-standard-support.template > os/userpatches/targets-release-standard-support.yaml

        sed '/    # unsupported-slow-hdmi/r /tmp/unsupported-slow-hdmi.txt' os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # unsupported-fast-hdmi/r /tmp/unsupported-fast-hdmi.txt' os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # unsupported-riscv64/r /tmp/unsupported-riscv64.txt'     os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # unsupported-headless/r /tmp/unsupported-headless.txt'   os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # wip-slow-hdmi/r /tmp/wip-slow-hdmi.txt'                 os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # wip-fast-hdmi/r /tmp/wip-slow-hdmi.txt'                 os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # wip-riscv64-hdmi/r /tmp/wip-slow-hdmi.txt'              os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml
        sed '/    # wip-headless/r /tmp/wip-headless.txt'                   os/userpatches/targets-release-community-maintained.template > os/userpatches/targets-release-community-maintained.yaml

        #sed '/    # wip-slow-hdmi/r /tmp/unsupported-slow-hdmi.txt' os/userpatches/targets-release-nightly.template > os/userpatches/targets-release-nightly.yaml
        #sed '/    # wip-fast-hdmi/r /tmp/unsupported-fast-hdmi.txt' os/userpatches/targets-release-nightly.template > os/userpatches/targets-release-nightly.yaml
        #sed '/    # wip-riscv64/r /tmp/unsupported-riscv64.txt'     os/userpatches/targets-release-nightly.template > os/userpatches/targets-release-nightly.yaml
        #sed '/    # wipunsupported-headless/r /tmp/unsupported-headless.txt'   os/userpatches/targets-release-nightly.template > os/userpatches/targets-release-nightly.yaml

    - name: "Generate Action Script"
      run: |

        cd build
        # Last stable branch
        #LAST=$(git branch -r | grep "v2" | tail -1 | cut -d"/" -f2)

        # generate targets-release-community-maintained.yaml
        #cp userpatches/targets-release-community-maintained.template userpatches/targets-release-community-maintained.yaml
        #sed -i '/    # unsupported/r /tmp/unsupported.txt' userpatches/targets-release-community-maintained.yaml
        #sed -i '/    # unsupported-headless/r /tmp/unsupported-headless.txt' userpatches/targets-release-community-maintained.yaml

        #git add userpatches/targets-release-community-maintained.yaml
        #git add userpatches/targets-release-community-maintained.yaml
        #git add -f userpatches/targets-release-community-maintained.yaml

        #
        # copy nightly templates
        #
        cp userpatches/gha/gha_config_nightly.yaml userpatches/gha/gha_config.yaml
        cp userpatches/targets-release-nightly.yaml userpatches/targets.yaml
        bash ./compile.sh gha-template
        # add boards, maintainers and branches
        sed -i '/# boards/r /tmp/boards.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# maintainers/r /tmp/maintainers.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# branches/r /tmp/branches.txt' output/info/artifact-image-complete-matrix.yml

        # we need unique concurency id
        sed -i "s/pipeline-/pipeline-nightly/" output/info/artifact-image-complete-matrix.yml
        cp output/info/artifact-image-complete-matrix.yml ../os/.github/workflows/complete-artifact-matrix-nightly.yml

        #
        # copy old stable templates
        #
        #cp userpatches/gha/gha_config_old_stable.yaml userpatches/gha/gha_config.yaml
        #cp userpatches/targets-release.yaml userpatches/targets.yaml
        #sed -i 's/build_ref: .*/build_ref: "'$LAST'"/' userpatches/gha/gha_config.yaml
        #bash ./compile.sh gha-template
        # add boards and maintainers
        #sed -i '/# boards/r /tmp/boards.txt' output/info/artifact-image-complete-matrix.yml
        #sed -i '/# maintainers/r /tmp/maintainers.txt' output/info/artifact-image-complete-matrix.yml
        # we need unique concurency id
        #sed -i "s/pipeline-/pipeline-old-stable/" output/info/artifact-image-complete-matrix.yml
        #cp output/info/artifact-image-complete-matrix.yml ../os/.github/workflows/complete-artifact-matrix-old-stable.yml


        #
        # copy standard support release templates
        #
        cp userpatches/gha/gha_config_release_standard_support.yaml userpatches/gha/gha_config.yaml
        cp userpatches/targets-release-standard-support.yaml userpatches/targets.yaml
        bash ./compile.sh gha-template
        # add boards and maintainers
        sed -i '/# boards/r /tmp/boards.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# maintainers/r /tmp/maintainers.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# branches/r /tmp/branches.txt' output/info/artifact-image-complete-matrix.yml
        # we need unique concurency id
        sed -i "s/pipeline-/standard-support/" output/info/artifact-image-complete-matrix.yml
        cp output/info/artifact-image-complete-matrix.yml ../os/.github/workflows/complete-artifact-matrix-standard-support.yml

        #
        # copy unsupported release templates
        #
        cp userpatches/gha/gha_config_release_unsupported.yaml userpatches/gha/gha_config.yaml
        cp userpatches/targets-release-community-maintained.yaml userpatches/targets.yaml
        bash ./compile.sh gha-template
        # add boards and maintainers
        sed -i '/# boards/r /tmp/boards.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# maintainers/r /tmp/maintainers.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# branches/r /tmp/branches.txt' output/info/artifact-image-complete-matrix.yml
        # we need unique concurency id
        sed -i "s/pipeline-/unsupported/" output/info/artifact-image-complete-matrix.yml
        cp output/info/artifact-image-complete-matrix.yml ../os/.github/workflows/complete-artifact-matrix-unsupported.yml


        #
        # copy all templates
        #
        cp userpatches/gha/gha_config_all.yaml userpatches/gha/gha_config.yaml
        cp userpatches/targets-all-not-eos.yaml userpatches/targets.yaml
        bash ./compile.sh gha-template
        # add boards and maintainers
        sed -i '/# boards/r /tmp/boards.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# maintainers/r /tmp/maintainers.txt' output/info/artifact-image-complete-matrix.yml
        sed -i '/# branches/r /tmp/branches.txt' output/info/artifact-image-complete-matrix.yml
        # we need unique concurency id
        sed -i "s/pipeline-/pipeline-all/" output/info/artifact-image-complete-matrix.yml
        cp output/info/artifact-image-complete-matrix.yml ../os/.github/workflows/complete-artifact-matrix-all.yml

        cd ../os
        git config --local user.email "info@armbian.com"
        git config --local user.name "Armbianworker"

        # Update build list
        git add userpatches/targets-release-standard-support.yaml
        git add userpatches/targets-release-community-maintained.yaml
        git add userpatches/targets-release-nightly.yaml

        # Add Action Scritps
        git add .github/workflows/complete-artifact-matrix-nightly.yml
        #git add .github/workflows/complete-artifact-matrix-old-stable.yml
        git add .github/workflows/complete-artifact-matrix-standard-support.yml
        git add .github/workflows/complete-artifact-matrix-unsupported.yml
        git add .github/workflows/complete-artifact-matrix-all.yml
        git commit --allow-empty -m "Update generated GHA chunk workflow artifact-image-complete-matrix.yml" -a

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.ACCESS_TOKEN_ARMBIANWORKER }}
        repository: armbian/os
        branch: ${{ github.ref }}
        directory: os
