name: "Remote changes"
on:
  workflow_dispatch:

jobs:

  prepare:
    name: "JSON"
    runs-on: ubuntu-latest
    outputs:
      matrix:  ${{steps.json.outputs.JSON_CONTENT}}
    steps:

      - name: "Checkout"
        uses: actions/checkout@v4.1.7
        
      - name: "Make JSON"
        id: json
        run: |

          echo 'JSON_CONTENT<<EOF' >> $GITHUB_OUTPUT
          cat git_sources.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          
  gradle:
    needs: prepare
    strategy:
      fail-fast: false
      max-parallel: 64
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}

    name: "Get logs"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:

      - name: "Release => ${{ matrix.source }} Desktop => ${{ matrix.branch }} Desktop => ${{ matrix.sha1 }}"
        run: |

          mkdir -p artifact
          i=0          
          git clone ${{ matrix.source }} -b ${{ matrix.branch }} check
          source="${{ matrix.source }}"
          source=${source/.git/}
          giturl=${source/https:\/\/github.com\//}
          if [[ "${source}" == *github* ]]; then
              for pr in $(git -C check log ${{ matrix.sha1 }}..HEAD --pretty="%s" --merges | cut -d' ' -f4 | cut -d'#' -f2 | tr '\n' ' '); do
                  curl -s https://api.github.com/repos/${giturl}/pulls/${pr} | jq -rc '.user.login + "|" + .html_url + "|" + .title + "|" + .base.repo.full_name + "|" + .base.repo.html_url' |
                  while IFS="|" read -r user pullurl title desc repourl; do
                      [[ -n $title ]] && echo "* $title by @$user in $pullurl <a href=$repourl>\`$desc\`</a>" | tee artifact/${{ matrix.sha1 }}.txt >> $GITHUB_STEP_SUMMARY
                  done
              i=$((i+1))
              done
          else
              URL=$(git -C check config --get remote.origin.url)
              REPO=$(basename -s .git `git -C check config --get remote.origin.url`)
              git -C check log ${{ matrix.sha1 }}..HEAD --pretty="%s|%an|%ae|%h|%H" --max-parents=1 |
              while IFS="|" read -r title user usermail hash bighash; do
                  i=$(( i + 1 ))
                  [[ -n $title ]] && echo "* $title by $user in <a href=\"$URL/commit/?id=$bighash\">$hash</a> <a href=$URL>\`$REPO\`</a>"  | tee artifact/${{ matrix.sha1 }}.txt >> $GITHUB_STEP_SUMMARY
              done
          fi
          #git -C check log ${{ matrix.sha1 }}..HEAD --oneline

      - name: Upload resoults
        uses: actions/upload-artifact@v4
        with:
          name: JSON
          path: artifact
          if-no-files-found: ignore
