name: Build train
on:
  workflow_dispatch:
    inputs:
      BUILD_BRANCH:
        description: Build branch
        required: false
        default: main
        type: string
      BUILD_RUNNER:
        description: Build runner
        required: false
        default: ubuntu-latest
        type: string
      KERNEL_ONLY:
        type: boolean
        description: True or False
        


jobs:

  ##########################################################################################
  #                                                                                        #
  #                cancels previous runs associated with a workflow                        #
  #                                                                                        #
  ##########################################################################################

  Cancel:
    name: "Cancel currently active"
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ github.event.schedule == '' }}
        with:
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}
          
  kernel:
    name: "Build kernel cache"
    needs: Cancel
    
    if: ${{ github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-kernel-cache.yml@main
    with:
      ACCESS_NAME: armbian
      BUILD_BRANCH: ${{ inputs.BUILD_BRANCH }}
      BUILD_RUNNER: ${{ inputs.BUILD_RUNNER }}
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  uboot:
    name: "Build u-boot cache"
    needs: Cancel
    
    if: ${{ inputs.KERNEL_ONLY }}
    uses: armbian/scripts/.github/workflows/build-u-boot-cache.yml@main
    with:
      ACCESS_NAME: armbian
      BUILD_BRANCH: ${{ inputs.BUILD_BRANCH }}
      BUILD_RUNNER: ${{ inputs.BUILD_RUNNER }}
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

#  Rootfs:
#    name: "Build rootfs cache"
#    needs: Cancel
#    
#    if: ${{ success() && github.repository_owner == 'Armbian' }}
#    uses: armbian/scripts/.github/workflows/build-rootfs-cache.yml@main
#    with:
#      ACCESS_NAME: armbian
#      BUILD_BRANCH: ${{ inputs.BUILD_BRANCH }}
#      BUILD_RUNNER: ${{ inputs.BUILD_RUNNER }}
#    secrets:
#      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
#      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}


  repository:
    if: ${{ always() }}
    needs: [kernel,uboot]
    runs-on: ubuntu-latest
    steps:
      - name: Print a greeting
        run: |

  apt-armbian-com:
  
    name: "Update stable"
    needs: [repository]
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: [self-hosted, Linux, local]
    steps:
      - uses: armbian/actions/triggers@main
        with:
          KEY: ${{ secrets.KEY_REPOSITORY }}
          USER: ${{ secrets.USER_REPOSITORY }}
          HOST: ${{ secrets.HOST_REPOSITORY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS_REPOSITORY }}

  beta-armbian-com:
  
    name: "Update beta"
    needs: [repository]
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: [self-hosted, Linux, local]
    steps:
      - uses: armbian/actions/triggers@main
        with:
          KEY: ${{ secrets.KEY_REPOSITORY_BETA }}
          USER: ${{ secrets.USER_REPOSITORY }}
          HOST: ${{ secrets.HOST_REPOSITORY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS_REPOSITORY }}

  sync-servers:
  
    name: "Sync servers"
    needs: [apt-armbian-com,beta-armbian-com]
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: [self-hosted, Linux, local]
    steps:
      - uses: armbian/actions/triggers@main
        with:
          KEY: ${{ secrets.KEY_SYNC_MIRRORS }}
          USER: ${{ secrets.USER_REPOSITORY }}
          HOST: ${{ secrets.HOST_REPOSITORY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS_REPOSITORY }}
